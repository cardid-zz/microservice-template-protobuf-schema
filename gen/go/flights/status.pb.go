// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        (unknown)
// source: flights/status.proto

package flights

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Код статуса ответа
type StatusCode int32

const (
	// не использовать
	StatusCode_STATUS_UNSPECIFIED StatusCode = 0
	// Успех
	StatusCode_OK StatusCode = 200
	// Внутренняя ошибка сервиса
	StatusCode_INTERNAL_ERROR StatusCode = 1000
	// Значение по ключу отсутствует
	StatusCode_NOT_FOUND StatusCode = 1001
	// Запись уже существует
	StatusCode_DUPLICATED StatusCode = 1003
	// Некорректные данные запроса
	StatusCode_BAD_REQUEST StatusCode = 2000
	// Доступ запрещен
	StatusCode_FORBIDDEN StatusCode = 2001
	// Ошибка бизнес логики
	StatusCode_BUSINESS_ERROR StatusCode = 3000
)

// Enum value maps for StatusCode.
var (
	StatusCode_name = map[int32]string{
		0:    "STATUS_UNSPECIFIED",
		200:  "OK",
		1000: "INTERNAL_ERROR",
		1001: "NOT_FOUND",
		1003: "DUPLICATED",
		2000: "BAD_REQUEST",
		2001: "FORBIDDEN",
		3000: "BUSINESS_ERROR",
	}
	StatusCode_value = map[string]int32{
		"STATUS_UNSPECIFIED": 0,
		"OK":                 200,
		"INTERNAL_ERROR":     1000,
		"NOT_FOUND":          1001,
		"DUPLICATED":         1003,
		"BAD_REQUEST":        2000,
		"FORBIDDEN":          2001,
		"BUSINESS_ERROR":     3000,
	}
)

func (x StatusCode) Enum() *StatusCode {
	p := new(StatusCode)
	*p = x
	return p
}

func (x StatusCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StatusCode) Descriptor() protoreflect.EnumDescriptor {
	return file_flights_status_proto_enumTypes[0].Descriptor()
}

func (StatusCode) Type() protoreflect.EnumType {
	return &file_flights_status_proto_enumTypes[0]
}

func (x StatusCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StatusCode.Descriptor instead.
func (StatusCode) EnumDescriptor() ([]byte, []int) {
	return file_flights_status_proto_rawDescGZIP(), []int{0}
}

// Код детализации ошибки
type DetailCode int32

const (
	// Не использовать
	DetailCode_DETAIL_UNSPECIFIED DetailCode = 0
)

// Enum value maps for DetailCode.
var (
	DetailCode_name = map[int32]string{
		0: "DETAIL_UNSPECIFIED",
	}
	DetailCode_value = map[string]int32{
		"DETAIL_UNSPECIFIED": 0,
	}
)

func (x DetailCode) Enum() *DetailCode {
	p := new(DetailCode)
	*p = x
	return p
}

func (x DetailCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DetailCode) Descriptor() protoreflect.EnumDescriptor {
	return file_flights_status_proto_enumTypes[1].Descriptor()
}

func (DetailCode) Type() protoreflect.EnumType {
	return &file_flights_status_proto_enumTypes[1]
}

func (x DetailCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DetailCode.Descriptor instead.
func (DetailCode) EnumDescriptor() ([]byte, []int) {
	return file_flights_status_proto_rawDescGZIP(), []int{1}
}

var File_flights_status_proto protoreflect.FileDescriptor

const file_flights_status_proto_rawDesc = "" +
	"\n" +
	"\x14flights/status.proto\x12\aflights*\x9a\x01\n" +
	"\n" +
	"StatusCode\x12\x16\n" +
	"\x12STATUS_UNSPECIFIED\x10\x00\x12\a\n" +
	"\x02OK\x10\xc8\x01\x12\x13\n" +
	"\x0eINTERNAL_ERROR\x10\xe8\a\x12\x0e\n" +
	"\tNOT_FOUND\x10\xe9\a\x12\x0f\n" +
	"\n" +
	"DUPLICATED\x10\xeb\a\x12\x10\n" +
	"\vBAD_REQUEST\x10\xd0\x0f\x12\x0e\n" +
	"\tFORBIDDEN\x10\xd1\x0f\x12\x13\n" +
	"\x0eBUSINESS_ERROR\x10\xb8\x17*$\n" +
	"\n" +
	"DetailCode\x12\x16\n" +
	"\x12DETAIL_UNSPECIFIED\x10\x00Bw\n" +
	" info.test.proto.services.flightsP\x01ZQgithub.com/cardid-zz/microservice-template-protobuf-schema/gen/go/flights;flightsb\x06proto3"

var (
	file_flights_status_proto_rawDescOnce sync.Once
	file_flights_status_proto_rawDescData []byte
)

func file_flights_status_proto_rawDescGZIP() []byte {
	file_flights_status_proto_rawDescOnce.Do(func() {
		file_flights_status_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_flights_status_proto_rawDesc), len(file_flights_status_proto_rawDesc)))
	})
	return file_flights_status_proto_rawDescData
}

var file_flights_status_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_flights_status_proto_goTypes = []any{
	(StatusCode)(0), // 0: flights.StatusCode
	(DetailCode)(0), // 1: flights.DetailCode
}
var file_flights_status_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_flights_status_proto_init() }
func file_flights_status_proto_init() {
	if File_flights_status_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_flights_status_proto_rawDesc), len(file_flights_status_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_flights_status_proto_goTypes,
		DependencyIndexes: file_flights_status_proto_depIdxs,
		EnumInfos:         file_flights_status_proto_enumTypes,
	}.Build()
	File_flights_status_proto = out.File
	file_flights_status_proto_goTypes = nil
	file_flights_status_proto_depIdxs = nil
}
