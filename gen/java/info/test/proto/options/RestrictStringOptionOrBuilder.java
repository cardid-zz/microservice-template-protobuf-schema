// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: options/options.proto

package info.test.proto.options;

public interface RestrictStringOptionOrBuilder extends
    // @@protoc_insertion_point(interface_extends:options.RestrictStringOption)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * len - ограничение длинны строки.
   * </pre>
   *
   * <code>.options.Interval len = 1 [json_name = "len"];</code>
   * @return Whether the len field is set.
   */
  boolean hasLen();
  /**
   * <pre>
   * len - ограничение длинны строки.
   * </pre>
   *
   * <code>.options.Interval len = 1 [json_name = "len"];</code>
   * @return The len.
   */
  info.test.proto.options.Interval getLen();
  /**
   * <pre>
   * len - ограничение длинны строки.
   * </pre>
   *
   * <code>.options.Interval len = 1 [json_name = "len"];</code>
   */
  info.test.proto.options.IntervalOrBuilder getLenOrBuilder();

  /**
   * <pre>
   * regex - ограничение по регулярному выражению.
   * </pre>
   *
   * <code>string regex = 2 [json_name = "regex"];</code>
   * @return Whether the regex field is set.
   */
  boolean hasRegex();
  /**
   * <pre>
   * regex - ограничение по регулярному выражению.
   * </pre>
   *
   * <code>string regex = 2 [json_name = "regex"];</code>
   * @return The regex.
   */
  java.lang.String getRegex();
  /**
   * <pre>
   * regex - ограничение по регулярному выражению.
   * </pre>
   *
   * <code>string regex = 2 [json_name = "regex"];</code>
   * @return The bytes for regex.
   */
  com.google.protobuf.ByteString
      getRegexBytes();

  /**
   * <pre>
   * uuid - строка должна соответствовать формату uuid (RFC 4122).
   * </pre>
   *
   * <code>.options.EmptyOption uuid = 3 [json_name = "uuid"];</code>
   * @return Whether the uuid field is set.
   */
  boolean hasUuid();
  /**
   * <pre>
   * uuid - строка должна соответствовать формату uuid (RFC 4122).
   * </pre>
   *
   * <code>.options.EmptyOption uuid = 3 [json_name = "uuid"];</code>
   * @return The uuid.
   */
  info.test.proto.options.EmptyOption getUuid();
  /**
   * <pre>
   * uuid - строка должна соответствовать формату uuid (RFC 4122).
   * </pre>
   *
   * <code>.options.EmptyOption uuid = 3 [json_name = "uuid"];</code>
   */
  info.test.proto.options.EmptyOptionOrBuilder getUuidOrBuilder();

  /**
   * <pre>
   * email - строка должна соответствовать формату email (RFC 5322).
   * </pre>
   *
   * <code>.options.EmptyOption email = 4 [json_name = "email"];</code>
   * @return Whether the email field is set.
   */
  boolean hasEmail();
  /**
   * <pre>
   * email - строка должна соответствовать формату email (RFC 5322).
   * </pre>
   *
   * <code>.options.EmptyOption email = 4 [json_name = "email"];</code>
   * @return The email.
   */
  info.test.proto.options.EmptyOption getEmail();
  /**
   * <pre>
   * email - строка должна соответствовать формату email (RFC 5322).
   * </pre>
   *
   * <code>.options.EmptyOption email = 4 [json_name = "email"];</code>
   */
  info.test.proto.options.EmptyOptionOrBuilder getEmailOrBuilder();

  /**
   * <pre>
   * iso_date - строка должна соответствовать формату даты и времени ISO (RFC 3339).
   * </pre>
   *
   * <code>.options.EmptyOption iso_date = 5 [json_name = "isoDate"];</code>
   * @return Whether the isoDate field is set.
   */
  boolean hasIsoDate();
  /**
   * <pre>
   * iso_date - строка должна соответствовать формату даты и времени ISO (RFC 3339).
   * </pre>
   *
   * <code>.options.EmptyOption iso_date = 5 [json_name = "isoDate"];</code>
   * @return The isoDate.
   */
  info.test.proto.options.EmptyOption getIsoDate();
  /**
   * <pre>
   * iso_date - строка должна соответствовать формату даты и времени ISO (RFC 3339).
   * </pre>
   *
   * <code>.options.EmptyOption iso_date = 5 [json_name = "isoDate"];</code>
   */
  info.test.proto.options.EmptyOptionOrBuilder getIsoDateOrBuilder();

  public info.test.proto.options.RestrictStringOption.PayloadCase getPayloadCase();
}
