// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: flights/status.proto

package info.test.proto.services.flights;

/**
 * <pre>
 * Код статуса ответа
 * </pre>
 *
 * Protobuf enum {@code flights.StatusCode}
 */
public enum StatusCode
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <pre>
   * не использовать
   * </pre>
   *
   * <code>STATUS_UNSPECIFIED = 0;</code>
   */
  STATUS_UNSPECIFIED(0),
  /**
   * <pre>
   * Успех
   * </pre>
   *
   * <code>OK = 200;</code>
   */
  OK(200),
  /**
   * <pre>
   * Внутренняя ошибка сервиса
   * </pre>
   *
   * <code>INTERNAL_ERROR = 1000;</code>
   */
  INTERNAL_ERROR(1000),
  /**
   * <pre>
   * Значение по ключу отсутствует
   * </pre>
   *
   * <code>NOT_FOUND = 1001;</code>
   */
  NOT_FOUND(1001),
  /**
   * <pre>
   * Запись уже существует
   * </pre>
   *
   * <code>DUPLICATED = 1003;</code>
   */
  DUPLICATED(1003),
  /**
   * <pre>
   * Некорректные данные запроса
   * </pre>
   *
   * <code>BAD_REQUEST = 2000;</code>
   */
  BAD_REQUEST(2000),
  /**
   * <pre>
   * Доступ запрещен
   * </pre>
   *
   * <code>FORBIDDEN = 2001;</code>
   */
  FORBIDDEN(2001),
  /**
   * <pre>
   * Ошибка бизнес логики
   * </pre>
   *
   * <code>BUSINESS_ERROR = 3000;</code>
   */
  BUSINESS_ERROR(3000),
  UNRECOGNIZED(-1),
  ;

  /**
   * <pre>
   * не использовать
   * </pre>
   *
   * <code>STATUS_UNSPECIFIED = 0;</code>
   */
  public static final int STATUS_UNSPECIFIED_VALUE = 0;
  /**
   * <pre>
   * Успех
   * </pre>
   *
   * <code>OK = 200;</code>
   */
  public static final int OK_VALUE = 200;
  /**
   * <pre>
   * Внутренняя ошибка сервиса
   * </pre>
   *
   * <code>INTERNAL_ERROR = 1000;</code>
   */
  public static final int INTERNAL_ERROR_VALUE = 1000;
  /**
   * <pre>
   * Значение по ключу отсутствует
   * </pre>
   *
   * <code>NOT_FOUND = 1001;</code>
   */
  public static final int NOT_FOUND_VALUE = 1001;
  /**
   * <pre>
   * Запись уже существует
   * </pre>
   *
   * <code>DUPLICATED = 1003;</code>
   */
  public static final int DUPLICATED_VALUE = 1003;
  /**
   * <pre>
   * Некорректные данные запроса
   * </pre>
   *
   * <code>BAD_REQUEST = 2000;</code>
   */
  public static final int BAD_REQUEST_VALUE = 2000;
  /**
   * <pre>
   * Доступ запрещен
   * </pre>
   *
   * <code>FORBIDDEN = 2001;</code>
   */
  public static final int FORBIDDEN_VALUE = 2001;
  /**
   * <pre>
   * Ошибка бизнес логики
   * </pre>
   *
   * <code>BUSINESS_ERROR = 3000;</code>
   */
  public static final int BUSINESS_ERROR_VALUE = 3000;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static StatusCode valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static StatusCode forNumber(int value) {
    switch (value) {
      case 0: return STATUS_UNSPECIFIED;
      case 200: return OK;
      case 1000: return INTERNAL_ERROR;
      case 1001: return NOT_FOUND;
      case 1003: return DUPLICATED;
      case 2000: return BAD_REQUEST;
      case 2001: return FORBIDDEN;
      case 3000: return BUSINESS_ERROR;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<StatusCode>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      StatusCode> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<StatusCode>() {
          public StatusCode findValueByNumber(int number) {
            return StatusCode.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalStateException(
          "Can't get the descriptor of an unrecognized enum value.");
    }
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return info.test.proto.services.flights.Status.getDescriptor().getEnumTypes().get(0);
  }

  private static final StatusCode[] VALUES = values();

  public static StatusCode valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private StatusCode(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:flights.StatusCode)
}

